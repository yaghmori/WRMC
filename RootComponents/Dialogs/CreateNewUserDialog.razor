@inherits BaseComponent
<MudDialog>
    <DialogContent>
        <EditForm Model="@NewUserRequest" OnValidSubmit="SaveChangesSubmit">
            <FluentValidator />
            <div class="d-flex flex-column gap-2">

                <MudTextField @bind-Value="@NewUserRequest.Email"
                              For="() => NewUserRequest.Email"
                              Label="@_displayLocalizer[DisplayResources.Email]"
                              Variant="Variant.Outlined"
                              Immediate="true" />
                <MudItem xs="12" md="4">
                    <MudRadioGroup @bind-SelectedOption=NewUserRequest.Gender
                                   For="@(()=>NewUserRequest.Gender)">
                        @foreach (var item in Enum.GetValues(typeof(GenderEnum)).Cast<GenderEnum>())
                        {
                            <MudRadio Option="@item" Color="Color.Primary">@item.GetDisplayDescription()</MudRadio>
                        }
                    </MudRadioGroup>
                </MudItem>

                <div class="d-flex flex-row gap-2">
                    <MudTextField @bind-Value="@NewUserRequest.FirstName"
                                  For="() => NewUserRequest.FirstName"
                                  Label="@_displayLocalizer[DisplayResources.FirstName]"
                                  Variant="Variant.Outlined"
                                  Immediate="true" />
                    <MudTextField @bind-Value="@NewUserRequest.LastName"
                                  For="() => NewUserRequest.LastName"
                                  Label="@_displayLocalizer[DisplayResources.LastName]"
                                  Variant="Variant.Outlined"
                                  Immediate="true" />
                </div>
                    <div>

                    <MudTextField @bind-Value="@NewUserRequest.Password"
                                  For="() => NewUserRequest.Password"
                                  Label="@_displayLocalizer[DisplayResources.Password]"
                                  Variant="Variant.Outlined"
                                  Adornment="Adornment.End"
                                  AdornmentIcon="@Icons.Material.Filled.Cached"
                                  OnAdornmentClick="GenerateRandomPassword"
                                  Immediate="true" />
                    <MudTextField @bind-Value="@NewUserRequest.PasswordConfirmation"
                                  For="() => NewUserRequest.PasswordConfirmation"
                                  Label="@_displayLocalizer[DisplayResources.PasswordConfirmation]"
                                  Variant="Variant.Outlined"
                                  Immediate="true" />

                </div>


            </div>
            <div class="d-flex flex-row justify-content-end mt-4 mb-2 gap-2">
                <MudButton OnClick="Cancel">@_viewLocalizer[ViewResources.Cancel]</MudButton>
                <MudButton Disabled="@(!context.Validate() ||  !context.IsModified() || IsBusy)"
                           ButtonType="ButtonType.Submit"
                           Class="w-85"
                           Variant="Variant.Filled"
                           Color="Color.Primary">
                    @if (IsBusy)
                    {
                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                        <MudText Class="ms-2">@_viewLocalizer[ViewResources.Processing]</MudText>
                    }
                    else
                    {
                        @_viewLocalizer[ViewResources.SaveChanges].Value
                    }
                </MudButton>
            </div>
        </EditForm>

    </DialogContent>
</MudDialog>


